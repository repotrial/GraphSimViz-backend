version: '3.3'

services:
  app:
    image: gvl_backend
    container_name: gvl_backend
    build: .
    env_file:
      - './docker-django.env.dev'
    restart: always
#    volumes:
#      - digest_volume:/usr/src/digest/mapping_files
    command:
      - "sh"
      - "/usr/src/gvl/docker-entrypoint.sh"
    ports:
      - 8001:8000
#    networks:
#      - digest_net
    depends_on:
      - db
      - redis
  redis:
    image: redis
    restart: always
    command: [ "redis-server" ]
    container_name: gvl_redis
    hostname: gvl_redis
#    networks:
#      - gvl_net
    depends_on:
      - db
#  celery:
#    command:
#      - "sh"
#      - "/usr/src/digest/scripts/start_celery_worker.sh"
#    restart: always
#    build: .
#    container_name: digest_celery
#    hostname: digest_celery
#    env_file:
#      - './docker-django.env.dev'
#    volumes:
#      - digest_volume:/usr/src/digest/mapping_files
#    depends_on:
#      - redis
#      - db
#    networks:
#      - digest_net
#  celery-beat:
#    command:
#      - "sh"
#      - "/usr/src/digest/scripts/start_celery_beat.sh"
#    build: .
#    container_name: digest_celery_beat
#    hostname: digest_celery_beat
#    env_file:
#      - './docker-django.env.dev'
#    volumes:
#      - ./:/usr/src/digest/
#    depends_on:
#      - redis
#      - db
#    networks:
#      - digest_net
#  flower:
#    image: mher/flower
#    container_name: digest_flower
#    env_file:
#      - './docker-django.env.dev'
#    ports:
#      - 8888:8888
#    networks:
#      - digest_net
  db:
    image: postgres
    restart: always
    container_name: gvl_db
    hostname: db
    ports:
      - 5432:5432
#    networks:
#      - gvl_net
    volumes:
      - gvl_db_volume:/var/lib/postgresql/example_files
    env_file:
      - './docker-django.env.dev'
    command:
      - "postgres"
      - "-c"
      - "max_connections=10000"
      - "-c"
      - "shared_buffers=2GB"

#networks:
#  gvl_net:

volumes:
#  digest_volume:
  gvl_db_volume:
