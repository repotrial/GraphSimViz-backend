version: '3.3'

services:
  app:
    image: graphsimviz_backend
    container_name: graphsimviz_backend
    build: .
    env_file:
      - './docker-django.env'
    restart: always
    command:
      - "sh"
      - "/usr/src/graphsimviz/docker-entrypoint.sh"
    ports:
      - 8032:8000
    networks:
        - graphsimviz_net
    depends_on:
      - db
      - redis
  redis:
    image: redis
    restart: always
    command: [ "redis-server" ]
    container_name: graphsimviz_redis
    hostname: graphsimviz_redis
#    networks:
#      - graphsimviz_net
    depends_on:
      - db
  celery:
    command:
      - "sh"
      - "/usr/src/graphsimviz/scripts/start_celery_worker.sh"
    image: graphsimviz_backend
    restart: always
    build: .
    container_name: graphsimviz_celery
    hostname: graphsimviz_celery
    env_file:
      - './docker-django.env'
    networks:
      - graphsimviz_net
    depends_on:
      - redis
      - db
  celery-beat:
    command:
      - "sh"
      - "/usr/src/digest/scripts/start_celery_beat.sh"
    image: graphsimviz_backend
    container_name: graphsimviz_celery_beat
    hostname: graphsimviz_celery_beat
    env_file:
      - 'docker-django.env'
    networks:
      - graphsimviz_net
    depends_on:
      - redis
      - db
#  flower:
#    image: mher/flower
#    container_name: graphsimviz_flower
#    env_file:
#      - 'docker-django.env'
#    networks:
#      - graphsimviz_net
#    ports:
#      - 8888:8888
  rabbitmq:
    image: rabbitmq:latest
    restart: always
    container_name: graphsimviz_queue
    hostname: graphsimviz_queue
    networks:
      - graphsimviz_net
    env_file:
      - 'docker-django.env'
  db:
    image: postgres
    restart: always
    container_name: graphsimviz_db
    hostname: graphsimviz_db
#    ports:
#      - 5432:5432
    volumes:
      - graphsimviz_db_volume:/var/lib/postgresql/example_files
    environment:
      - POSTGRES_DB=graphsimviz
      - POSTGRES_USER=gvl
      - POSTGRES_PASSWORD=globalvslocal
    networks:
      - graphsimviz_net
    command:
      - "postgres"
      - "-c"
      - "max_connections=10000"
      - "-c"
      - "shared_buffers=2GB"


volumes:
  graphsimviz_db_volume:

networks:
  graphsimviz_net:
